<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">

<channel>
  <title>Top Scirate Papers</title>
  <link>https://www.scirate.com</link>
  <description>The feed lists the top "scited" papers on the scirate website, often featuring the most widely appreciated quantum physics (quant-ph) preprints.</description>

  <item>
    <title>On the computational hardness needed for quantum cryptography</title>
    <link>http://arxiv.org/pdf/2209.04101</link>
    <author>Zvika Brakerski, Ran Canetti, Luowen Qian</author>
    <pubDate>Sep 12 2022</pubDate>
    <description>In the classical model of computation, it is well established that one-way functions (OWF) are essential for almost every computational cryptographic application. In the quantum setting, however, OWFs appear not to be essential (Kretschmer 2021; Ananth et al., Morimae and Yamakawa 2022), and the question of whether a minimal primitive exists remains open. We consider EFI pairs -- efficiently samplable, statistically far but computationally indistinguishable pairs of distributions. Building on the work of Yan (2022) which shows equivalence between EFI pairs and statistical commitment schemes, we show that EFI pairs are necessary and sufficient for a large class of quantum-cryptographic applications. Specifically, while it was known how to construct commitments schemes, oblivious transfer, and general secure multiparty computation from any EFI, we show how to construct EFI pairs from minimalistic versions of each one of these primitives. We also construct from EFI quantum computational zero knowledge ($\mathsf{QCZK}$) proofs for all of $\mathsf{QIP}$, and construct EFI pairs from essentially any non-trivial $\mathsf{QCZK}$. This suggests that, for much of quantum cryptography, EFI pairs play a similar role to that played by OWFs in the classical setting: they are simple to describe, essential, and also serve as a linchpin for demonstrating equivalence between primitives.</description>
  </item>

  <item>
    <title>Tensor Reconstruction Beyond Constant Rank</title>
    <link>http://arxiv.org/pdf/2209.04177</link>
    <author>Shir Peleg, Amir Shpilka, Ben Lee Volk</author>
    <pubDate>Sep 12 2022</pubDate>
    <description>We give reconstruction algorithms for subclasses of depth-3 arithmetic circuits. In particular, we obtain the first efficient algorithm for finding tensor rank, and an optimal tensor decomposition as a sum of rank-one tensors, when given black-box access to a tensor of super-constant rank. We obtain the following results: 1. A deterministic algorithm that reconstructs polynomials computed by $\Sigma^{[k]}\bigwedge^{[d]}\Sigma$ circuits in time $\mathsf{poly}(n,d,c) \cdot \mathsf{poly}(k)^{k^{k^{10}}}$ 2. A randomized algorithm that reconstructs polynomials computed by multilinear $\Sigma^{k]}\prod^{[d]}\Sigma$ circuits in time $\mathsf{poly}(n,d,c) \cdot k^{k^{k^{k^{O(k)}}}}$ 3. A randomized algorithm that reconstructs polynomials computed by set-multilinear $\Sigma^{k]}\prod^{[d]}\Sigma$ circuits in time $\mathsf{poly}(n,d,c) \cdot k^{k^{k^{k^{O(k)}}}}$, where $c=\log q$ if $\mathbb{F}=\mathbb{F}_q$ is a finite field, and $c$ equals the maximum bit complexity of any coefficient of $f$ if $\mathbb{F}$ is infinite. Prior to our work, polynomial time algorithms for the case when the rank, $k$, is constant, were given by Bhargava, Saraf and Volkovich [BSV21]. Another contribution of this work is correcting an error from a paper of Karnin and Shpilka [KS09] that affected Theorem 1.6 of [BSV21]. Consequently, the results of [KS09, BSV21] continue to hold, with a slightly worse setting of parameters. For fixing the error we study the relation between syntactic and semantic ranks of $\Sigma\Pi\Sigma$ circuits. We obtain our improvement by introducing a technique for learning rank preserving coordinate-subspaces. [KS09] and [BSV21] tried all choices of finding the "correct" coordinates, which led to having a fast growing function of $k$ at the exponent of $n$. We find these spaces in time that is growing fast with $k$, yet it is only a fixed polynomial in $n$.</description>
  </item>

  <item>
    <title>Non-convex Quadratic Programming Using Coherent Optical Networks</title>
    <link>http://arxiv.org/pdf/2209.04415</link>
    <author>Farhad Khosravi, Ugur Yildiz, Artur Scherer, Pooya Ronagh</author>
    <pubDate>Sep 12 2022</pubDate>
    <description>We investigate the possibility of solving continuous non-convex optimization problems using a network of interacting quantum optical oscillators. We propose a native encoding of continuous variables in analog signals associated with the quadrature operators of a set of quantum optical modes. Optical coupling of the modes and noise introduced by vacuum fluctuations from external reservoirs or by weak measurements of the modes are used to optically simulate a diffusion process on a set of continuous random variables. The process is run sufficiently long for it to relax into the steady state of an energy potential defined on a continuous domain. As a first demonstration, we numerically benchmark solving box-constrained quadratic programming (BoxQP) problems using these settings. We consider delay-line and measurement-feedback variants of the experiment. Our benchmarking results demonstrate that in both cases the optical network is capable of solving BoxQP problems over three orders of magnitude faster than a state-of-the-art classical heuristic.</description>
  </item>

  <item>
    <title>Improvement of quantum walk-based search algorithms in single marked vertex graphs</title>
    <link>http://arxiv.org/pdf/2209.04162</link>
    <author>Xinying Li, Yun Shang</author>
    <pubDate>Sep 12 2022</pubDate>
    <description>Quantum walks are powerful tools for building quantum search algorithms or quantum sampling algorithms named the construction of quantum stationary state. However, the success probability of those algorithms are all far away from 1. Amplitude amplification is usually used to amplify success probability, but the soufflé problems follow. Only stop at the right step can we achieve a maximum success probability. Otherwise, as the number of steps increases, the success probability may decrease, which will cause troubles in practical application of the algorithm when the optimal number of steps is not known. In this work, we define generalized interpolated quantum walks, which can both improve the success probability of search algorithms and avoid the soufflé problems. Then we combine generalized interpolation quantum walks with quantum fast-forwarding. The combination both reduce the times of calling walk operator of searching algorithm from $\Theta((\varepsilon^{-1})\sqrt{\Heg})$ to $\Theta(\log(\varepsilon^{-1})\sqrt{\Heg})$ and reduces the number of ancilla qubits required from $\Theta(\log(\varepsilon^{-1})+\log\sqrt{\Heg})$ to $\Theta(\log\log(\varepsilon^{-1})+\log\sqrt{\Heg})$, and the souffle problem is avoided while the success probability is improved, where $\varepsilon$ denotes the precision and $\Heg$ denotes the classical hitting time. Besides, we show that our generalized interpolated quantum walks can be used to improve the construction of quantum states corresponding to stationary distributions as well. Finally, we give an application that can be used to construct a slowly evolving Markov chain sequence by applying generalized interpolated quantum walks, which is the necessary premise in adiabatic stationary state preparation.</description>
  </item>

  <item>
    <title>ipie: A Python-based Auxiliary-Field Quantum Monte Carlo Program with Flexibility and Efficiency on CPUs and GPUs</title>
    <link>http://arxiv.org/pdf/2209.04015</link>
    <author>Fionn D. Malone, Ankit Mahajan, James S. Spencer, Joonho Lee</author>
    <pubDate>Sep 12 2022</pubDate>
    <description>We report the development of a python-based auxiliary-field quantum Monte Carlo (AFQMC) program, ipie, with preliminary timing benchmarks and new AFQMC results on the isomerization of [Cu$_2$O$_2$$]^{2+}$. We demonstrate how implementations for both central and graphical processing units (CPUs and GPUs) are achieved in ipie. We show an interface of ipie with PySCF as well as a straightforward template for adding new estimators to ipie. Our timing benchmarks against other C++ codes, QMCPACK and Dice, suggest that ipie is faster or similarly performing for all chemical systems considered on both CPUs and GPUs. Our results on [Cu$_2$O$_2$$]^{2+}$ using selected configuration interaction trials show that it is possible to converge the ph-AFQMC isomerization energy between bis($\mu$-oxo) and $\mu$-$\eta^2$:$\eta^2$ peroxo configurations to the exact known results for small basis sets with $10^5$ to $10^6$ determinants. We also report the isomerization energy with a quadruple-zeta basis set with an estimated error less than a kcal/mol, which involved 52 electrons and 290 orbitals with $10^6$ determinants in the trial wavefunction. These results highlight the utility of ph-AFQMC and ipie for systems with modest strong correlation and large-scale dynamic correlation.</description>
  </item>

</channel>

</rss>